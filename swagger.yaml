openapi: 3.0.3
info:
  title: test_task_updated
  # description: |-
  #   This is a sample Pet Store Server based on the OpenAPI 3.0 specification.  You can find out more about
  #   Swagger at [https://swagger.io](https://swagger.io). In the third iteration of the pet store, we've switched to the design first approach!
  #   You can now help us improve the API whether it's by making changes to the definition itself or to the code.
  #   That way, with time, we can improve the API in general, and expose some of the new features in OAS3.

  #   _If you're looking for the Swagger 2.0/OAS 2.0 version of Petstore, then click [here](https://editor.swagger.io/?url=https://petstore.swagger.io/v2/swagger.yaml). Alternatively, you can load via the `Edit > Load Petstore OAS 2.0` menu option!_
    
  #   Some useful links:
  #   - [The Pet Store repository](https://github.com/swagger-api/swagger-petstore)
  #   - [The source API definition for the Pet Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)
  # termsOfService: http://swagger.io/terms/
  # contact:
    # email: apiteam@swagger.io
  # license:
  #   name: Apache 2.0
  #   url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
# externalDocs:
#   description: Find out more about Swagger
#   url: http://swagger.io
# servers:
#   - url: https://petstore3.swagger.io/api/v3
tags:
  - name: product
    description: Информация по товару
    # externalDocs:
    #   description: Find out more
    #   url: http://swagger.io

paths:
  /product/{product_id}/reviews:
    get:
      tags:
        - product
      summary: Получение отзывов о товаре
      description: ''
      operationId: getReviews
      parameters:
        - name: product_id
          in: path
          description: ID продукта
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reviews'
components:
  schemas:
    Review:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 4
        rating:
          type: number
          format: int64
          example: 4.8
        user_name:
          type: string
          format: string
          example: 'Александра'
        city:
          type: string
          format: string
          example: 'Жуковский'
        date:
          type: string
          format: string
          example: '2023-08-2T10:30:00Z'
        text:
          type: string
          format: string
          example: 'Как всегда отличное качество, крой, упаковка и доставка. Не могу остановиться делать покупки в вашем магазине:) Надеюсь, муж из дома не выгонит. Цвет у фуболк очень нежный и не часто встречающийся, пойдет и блондинкам, и брюнеткам. На обънм груди 104 см села супер, в самый раз. Еще и брюки подобрала, поэтому я довольна как никто.'
        answer:
          type: string
          format: string
          example: 'Елена, добрый день! Благодарим вас за отзыв. Очень рады, что вам понравились заказанные модели. Желаем, чтобы каждая покупка у нас приносила вам удовольствие и отличное настроение. Хороших вам выходных!'
      xml:
        name: category
    Reviews:
      type: object
      properties:
        total:
          type: number
          format: int32
          example: 45
        avg_rating:
          type: number
          format: float
          example: 4.3
        # reviews:
        #   $ref: '#/components/schemas/Review'
        reviews:
          type: array
          items:
            $ref: '#/components/schemas/Review'
      xml:
        name: '##default'
  requestBodies:
    Pet:
      description: Pet object that needs to be added to the store
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Pet'
        application/xml:
          schema:
            $ref: '#/components/schemas/Pet'
    UserArray:
      description: List of user object
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/User'